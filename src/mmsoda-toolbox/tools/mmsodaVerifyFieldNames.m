function varargout = mmsodaVerifyFieldNames(conf,modeStr)
% <a href="matlab:web(fullfile(mmsodaroot,'html','mmsodaVerifyFieldNames.html'),'-helpbrowser')">View HTML documentation for this function in the help browser</a>

% % 

% % LICENSE START
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
% %                                                                           % %
% % MMSODA Toolbox for MATLAB                                                 % %
% %                                                                           % %
% % Copyright (C) 2013 Netherlands eScience Center                            % %
% %                                                                           % %
% % Licensed under the Apache License, Version 2.0 (the "License");           % %
% % you may not use this file except in compliance with the License.          % %
% % You may obtain a copy of the License at                                   % %
% %                                                                           % %
% % http://www.apache.org/licenses/LICENSE-2.0                                % %
% %                                                                           % %
% % Unless required by applicable law or agreed to in writing, software       % %
% % distributed under the License is distributed on an "AS IS" BASIS,         % %
% % WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  % %
% % See the License for the specific language governing permissions and       % %
% % limitations under the License.                                            % %
% %                                                                           % %
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
% % LICENSE END


authorizedFieldNames =...
    {'assimilate',...
     'avgWalltimePerParSet',...
     'badScore',...
     'convMaxDiff',...
     'convUseLastFraction',...
     'converged',...
     'covModelPert',...
     'covObsPert',...
     'critGelRubConvd',...
     'drawInterval',...
     'doPlot',...
     'dontBundleTasks',...
     'evalCol',...
     'executeInParallel',...
     'initMethodKF',...
     'initValuesKF',...
     'initMethodNOKF',...
     'initValuesNOKF',...
     'isSingleObjective',...
     'isMultiObjective',...
     'jumpRate',...
     'llCols',...
     'modeGelRub',...
     'modeStr',...
     'modelName',...
     'namesNOKF',...
     'nCompl',...
     'nDASteps',...
     'nGelRub',...
     'nMembers',...
     'nModelEvalsMax',...
     'nOffspring',...
     'nOffspringFraction',...
     'nOffspringPerCompl',...
     'nOptPars',...
     'nOutputs',...
     'nNOKF',...
     'nObjs',...
     'nPrior',...
     'nSamples',...
     'nSamplesPerCompl',...
     'nStatesKF',...
     'nWorkers',...
     'objCallStr',...
     'objCallStrs',...
     'objCol',...
     'obsState',...
     'obsStateTime',...
     'objTexName',...
     'objTexNames',...
     'optEndTime',...
     'optStartTime',...
     'parameterSamplesAreGiven',...
     'parCols',...
     'paretoCol',...
     'paretoMethod',...
     'parNames',...
     'parNamesTex',...
     'parSpaceHiBound',...
     'parSpaceLoBound',...
     'priorTimes',...
     'randSeed',...
     'realPartOnly',...
     'sampleDrawMode',...
     'saveEnKFResults',...
     'saveInterval',...
     'startFromUniform',...
     'stateNamesKF',...
     'stateSpaceHiBound',...
     'stateSpaceLoBound',...
     'useIniFile',...
     'thresholdL',...
     'verboseOutput',...
     'visualizationCall',...
     'walltime'};


switch modeStr
    case 'check'
        F = fieldnames(conf);
        for k=1:numel(F)
            if ~any(strcmp(F{k},authorizedFieldNames))
                error(['Unrecognized field ',char(39),F{k},char(39),...
                    ' in variable conf.'])
            end

        end
        varargout = {};
    case 'show'
        disp(sprintf('%s\n',authorizedFieldNames{:}))
        varargout = {};
    case 'return'
        varargout{1} = authorizedFieldNames;
end

